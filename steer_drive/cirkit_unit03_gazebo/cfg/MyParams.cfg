#!/usr/bin/env python
# -*- coding: utf-8 -*-
PACKAGE = 'cirkit_unit03_gazebo'


import roslib; roslib.load_manifest(PACKAGE)


from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#list of parameters
gen.add('SPEED_SAFFETY', double_t, 0, "description for the integer parameter", 1, 0, 5) #velocidade minima 
gen.add('SPEED_REQUIRED', double_t, 0, "description for the string parameter", 10, 0, 20) #velocidade maxima 
gen.add('MAX_STEERING_ANGLE', double_t, 0, "description for the integer parameter", 41.5, 0, 50) #max angulo volante
gen.add('MIN_STEERING_ANGLE', double_t, 0, "description for the integer parameter", 30, 0, 50) #max angulo volante
# gen.add('TRAJECTORY_ANGLE', double_t, 0, "description for the integer parameter", 3, 0, 10) #angulo volante de cada iteracao
gen.add('NUM_TRAJ', int_t, 0, "description for the integer parameter", 15, 0, 30) #Número de trajetórias a serem geradas para cada lado (direita e esquerdado veículo)
gen.add('NUM_NODES', int_t, 0, "description for the integer parameter", 10, 0, 20) #Número de nós de cada trajetória calculados
gen.add('APdistMax', double_t, 0, "description for the integer parameter", 10, 0, 40) # Distância máxima do Ponto Atrator, isto é, a distância deste ao referencialdo veículo não ultrapassará este valor
gen.add('APdistMin', double_t, 0, "description for the integer parameter", 5, 0, 10) # Distância mínima do Ponto Atrator, isto é, a distância deste ao referencialdo veículo será no mínimo este valor
gen.add('DetectDist', double_t, 0, "description for the integer parameter", 40, 0, 50) # Distância de deteção de obstáculos (utilizado nas manobras tipo)
gen.add('DLO_Max', double_t, 0, "description for the integer parameter", 10, 0, 40) # Distância de referência de influência dos obstáculos, utilizado na normaliza-ção do valorDLO.
gen.add('Detection_Sensitivity', double_t, 0, "description for the integer parameter", 2, 1, 10) # Número de pontos detetados pelos sensores necessários para ati-var manobras
gen.add('TRAJ_DENSITY', double_t, 0, "description for the integer parameter", 1.4, 1.2, 2) # Densidade das trajetórias. Quanto mais próximo do valor 1, maior auniformidade das trajetórias (em relação ao ângulo de cada uma).
gen.add('MIN_SPACING_AP', double_t, 0, "description for the integer parameter", 1.2, 1, 2) # Espaçamento mínimo entre os valores máximo e mínimo da distância do ponto atrator.
gen.add('DETECT_SPACE_SENSIVITY', double_t, 0, "description for the integer parameter", 0.02, 0, 0.1) # distancia de segurança da zona de deteção dos objetos
gen.add('DETECT_SPACE_Dist', double_t, 0, "description for the integer parameter", 0.5, 0, 1) # distancia maxima em (y) -> utilizado para restringir os pontos utilizados no espaço de detacao
gen.add('WaitingTime', double_t, 0, "description for the integer parameter", 10, 0, 20) # tempo de espera antes de voltar para a via da direita após uma ultrapassagem
gen.add('RefreshRate', int_t, 0, "description for the integer parameter", 30, 5, 100) # Número máximo de publicações do nó por segundo, evitando sobrecarga do sistema.

# Trajectory weigths
gen.add('W_DAP', double_t, 0, "description for the integer parameter", 0.10, 0, 1)
gen.add('W_ADAP', double_t, 0, "description for the integer parameter", 0.00, 0, 1)
gen.add('W_DLO', double_t, 0, "description for the integer parameter", 0.90, 0, 1)

gen.add('TRAJ_INFO', int_t, 0, "description for the integer parameter", 0, 0, 3)

# Booleanos
gen.add('LINES', bool_t, 0, "description for the integer parameter", True) # ativa ou desativa a linha central como obstáculo
gen.add('AP_right', bool_t, 0, "description for the integer parameter", True) #  coloca o ponto atrator na via da direita
gen.add('AP_left', bool_t, 0, "description for the integer parameter", False) #coloca o ponto atrator na via da esquerda
gen.add('Vel_Ang', bool_t, 0, "description for the integer parameter", True) # ativa a redução de velocidade do veículo consoante oângulo da trajetória

# gen.add('WAYPOINTS', bool_t, 0, "description for the integer parameter", False)

gen.add('OVERTAKING', bool_t, 0, "description for the integer parameter", False) # controla a ação de ultrapassagem
gen.add('CRUZAMENTO', bool_t, 0, "description for the integer parameter", False) # controla a ação de ultrapassagem
gen.add('DETECTION', bool_t, 0, "description for the integer parameter", False) # ativa a deteção frontal de obstáculos
gen.add('DETECTION_BACK', bool_t, 0, "description for the integer parameter", False) # ativa a deteção traseira de obstáculos
gen.add('MANUAL_OVERTAKING', bool_t, 0, "description for the integer parameter", False)

gen.add('RECORDING', bool_t, 0, "description for the integer parameter", False)

exit(gen.generate(PACKAGE, PACKAGE, "MyParams"))